<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <context:component-scan
        base-package="パッケージ名" />
    <context:annotation-config />

    <!-- ログインフォームの値をrequest上で分かり難い名前にするためのカスタマイズ -->
    <bean id="CustomUserDetailService"
        class="serviceImplクラスのフルパス">
    </bean>

    <!-- 認証対象外設定 -->
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/images/**" security="none"/>
    <security:http pattern="/storage/**" security="none"/>

    <security:http auto-config="true">

 
        <security:headers disabled="true" />

        <!-- HTTPSを強制するカスタマイズ -->
        <!-- <security:intercept-url pattern="/**" requires-channel="https" /> -->

        <!-- 認可の設定 -->
        <!-- 権限なし時の遷移先 -->
        <security:intercept-url pattern="/top*" access="permitAll" />
        <security:intercept-url pattern="/login*" access="permitAll" />
        <security:intercept-url pattern="/logout*" access="permitAll" />

        <!-- 権限あり時の遷移先 -->
        <security:intercept-url pattern="/summary/**" access="isFullyAuthenticated()" />
        <security:intercept-url pattern="/chat/**" access="isFullyAuthenticated()" />
        <!-- <security:intercept-url pattern="/secure/*" access="hasRole('S')" /> -->

        <!-- その他の遷移先(許可しない) -->
        <security:intercept-url pattern="/**" access="denyAll" />
        <security:access-denied-handler error-page="/login.html" />

        <!-- 認証のログイン処理 -->
        <security:form-login
            login-page="/login.html?noAuthUser"
            username-parameter=""
            password-parameter=""
            default-target-url=""
            always-use-default-target="true"
            authentication-failure-handler-ref="authenticationFailureHandler"
            login-processing-url="/" />

        <!-- セッション管理 -->
        <security:session-management
            session-fixation-protection="newSession" >
            <security:concurrency-control
                max-sessions="1" error-if-maximum-exceeded="false"
                expired-url="/sessionTimeout.html" />
        </security:session-management>

        <!-- 認証のログアウト処理 -->
        <security:logout logout-url="/j_spring_security_logout"
            logout-success-url="/logout.html"
            invalidate-session="true"
            delete-cookies="JSESSIONID" />

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="CustomUserDetailService" />
    </security:authentication-manager>

    <!-- 認証エラー時のハンドラクラスの設定 -->
    <bean id="authenticationFailureHandler"
        class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/error.html?sysError" />
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.authentication.BadCredentialsException">
                    /login.html?badCredentials
                </prop>
                <prop key="org.springframework.security.core.userdetails.UsernameNotFoundException">
                    /login.html?usernameNotFound
                </prop>
                <prop key="org.springframework.security.authentication.DisabledException">
                    /login.html?disabled
                </prop>
            </props>
        </property>
    </bean>

</beans>